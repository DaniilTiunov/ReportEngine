<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Цветовые ресурсы для тёмной темы -->
    <SolidColorBrush x:Key="PrimaryColor" Color="#1E1E1E" />
    <SolidColorBrush x:Key="SecondaryColor" Color="#2D2D30" />
    <SolidColorBrush x:Key="AccentColor" Color="#FF009688" />
    <SolidColorBrush x:Key="BorderColor" Color="#444444" />
    <SolidColorBrush x:Key="RowHoverColor" Color="#333333" />
    <SolidColorBrush x:Key="SelectedRowBackground" Color="#FF009688" />
    <SolidColorBrush x:Key="SelectedRowForeground" Color="#FFFFFF" />

    <!-- Принудительные глобальные стили -->
    <Style TargetType="UserControl" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="Window" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="White" />
    </Style>
    
    <!-- Стиль для ContentControl -->
    <Style TargetType="ContentControl" BasedOn="{x:Null}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>


    <Style TargetType="DataGrid" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowBackground" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="GridLinesVisibility" Value="None" />
    </Style>

    <Style TargetType="DataGridColumnHeader" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Padding" Value="8,4" />
    </Style>

    <Style TargetType="DataGridCell" BasedOn="{x:Null}">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedRowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectedRowForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Menu" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="MenuItem" BasedOn="{x:Null}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
                <Setter Property="Foreground" Value="{DynamicResource AccentColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="StatusBar" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="Button" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource AccentColor}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF1A3867" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF1A3867" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#CCCCCC" />
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
