<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign2.Defaults.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#373A6B" />
    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="Green" />


    <!--  Стили для Window  -->
    <Style TargetType="Window">
        <Setter Property="FontFamily" Value="Bahnschrift" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
    </Style>

    <!--  Стиль рамки окна  -->
    <Style x:Key="WindowBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <!--  Стили для UserControl  -->
    <Style TargetType="UserControl">
        <Setter Property="FontFamily" Value="Bahnschrift" />
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
    </Style>

    <!--  Стили для DockPanel  -->
    <Style TargetType="DockPanel">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
    </Style>

    <!--  Стили для TextBox  -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
    </Style>

    <!--  Стили для DataGrid  -->
    <Style BasedOn="{StaticResource MaterialDesignDataGrid}" TargetType="DataGrid">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowBackground" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="ColumnWidth" Value="*" />
    </Style>

    <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Padding" Value="20,5,5,5" />
    </Style>

    <Style BasedOn="{StaticResource MaterialDesignDataGridCell}" TargetType="DataGridCell">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedRowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectedRowForeground}" />
            </Trigger>
            <Trigger Property="IsManipulationEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
            </Trigger>
            <Trigger Property="IsEditing" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Стили для ListView  -->
    <Style TargetType="ListView">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedRowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectedRowForeground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
            </Trigger>
            <Trigger Property="IsTabStop" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedRowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource RowHoverColor}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedRowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectedRowForeground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="GridViewColumnHeader">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Стили для Menu и MenuItem  -->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontFamily" Value="Bahnschrift" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                                <!--  колонка под стрелку  -->
                            </Grid.ColumnDefinitions>

                            <!--  Заголовок  -->
                            <ContentPresenter
                                x:Name="HeaderHost"
                                Margin="6,3"
                                VerticalAlignment="Center"
                                ContentSource="Header" />

                            <!--  Стрелочка  -->
                            <Path
                                x:Name="Arrow"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 4 4 L 0 8 Z"
                                Fill="{DynamicResource PrimaryForeground}"
                                Visibility="Collapsed">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="0" CenterX="2" CenterY="4" />
                                </Path.RenderTransform>
                            </Path>

                            <!--  Подменю  -->
                            <Popup
                                x:Name="SubMenuPopup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{TemplateBinding IsSubmenuOpen}"
                                Placement="Right"
                                PopupAnimation="Fade">
                                <Border
                                    x:Name="SubMenuBorder"
                                    Background="{DynamicResource SecondaryColor}"
                                    BorderBrush="{DynamicResource AccentColor}"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <!--  Триггеры  -->
                    <ControlTemplate.Triggers>
                        <!--  Подсветка  -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource RowHoverColor}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentColor}" />
                        </Trigger>
                        <!--  Неактивный пункт  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForeground}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource DisabledForeground}" />
                        </Trigger>
                        <!--  Если есть подменю → показываем стрелку  -->
                        <Trigger Property="HasItems" Value="True">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" CenterX="2" CenterY="4" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!--  Если подменю открыто → подсветка стрелки  -->
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource AccentColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
    </Style>
    <!--  Стили для StatusBar  -->
    <Style TargetType="StatusBar">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="FontSize" Value="13" />
    </Style>
    <!--  Стили для кнопок  -->
    <!--  Button  -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Стили для TreeView  -->
    <Style BasedOn="{StaticResource MaterialDesignTreeView}" TargetType="TreeView">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer
                            CanContentScroll="True"
                            HorizontalScrollBarVisibility="Disabled"
                            VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Стили для TreeViewItem  -->
    <Style BasedOn="{StaticResource MaterialDesignTreeViewItem}" TargetType="TreeViewItem">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            VerticalAlignment="Center"
                            FontWeight="Normal"
                            Text="{Binding}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Выделение элемента  -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedRowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectedRowForeground}" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <!--  Наведение мыши  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
            </Trigger>
            <!--  Раскрытие узла  -->
            <Trigger Property="IsExpanded" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  Стили для TabContol  -->
    <Style TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
    </Style>
    <!--  Стили для TabItem  -->
    <Style TargetType="TabItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border
                        Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="2,2,0,0">
                        <ContentPresenter
                            x:Name="ContentSite"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GeneratedTabItem" TargetType="TabItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border
                        Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="2,2,0,0">
                        <ContentPresenter
                            x:Name="ContentSite"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="dragablz:DragablzItemsControl">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
    </Style>

    <Style TargetType="dragablz:TabablzControl">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="AdjacentHeaderItemOffset" Value="1" />
        <Setter Property="ShowDefaultCloseButton" Value="True" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Padding" Value="0,0,0,0" />
    </Style>

    <Style TargetType="dragablz:DragablzItem">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>


    <!--  Стили для ContextMenu  -->
    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Стили для GroupBox  -->
    <Style TargetType="GroupBox">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryColor}" />
    </Style>

    <Style TargetType="materialDesign:PopupBox">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryColor}" />
    </Style>

    <!--  ComboBox  -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Border Background="Transparent" />
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Focusable="False" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <!--  Внешняя рамка: всегда видима  -->
                    <Border
                        x:Name="MainBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4"
                        SnapsToDevicePixels="True">
                        <Grid
                            x:Name="MainGrid"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>

                            <!--  Контент (выбранный элемент)  -->
                            <ContentPresenter
                                x:Name="ContentSite"
                                Grid.Column="0"
                                Margin="6,2,0,2"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                IsHitTestVisible="False" />

                            <!--  Текстовое поле для режима редактирования  -->
                            <TextBox
                                x:Name="PART_EditableTextBox"
                                Grid.Column="0"
                                Margin="3,2,23,2"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                Focusable="True"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                Visibility="Hidden" />

                            <!--  Стрелка: визуал, не перехватывает клики  -->
                            <Path
                                x:Name="Arrow"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 4 4 L 8 0 Z"
                                Fill="{DynamicResource AccentColor}"
                                IsHitTestVisible="False" />

                            <!--  Прозрачный ToggleButton-оверлей для приёма кликов  -->
                            <ToggleButton
                                x:Name="ToggleButton"
                                Grid.ColumnSpan="2"
                                Width="{Binding ActualWidth, ElementName=MainGrid}"
                                Height="{Binding ActualHeight, ElementName=MainGrid}"
                                Margin="0"
                                Padding="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Panel.ZIndex="100"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Focusable="false"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                SnapsToDevicePixels="True"
                                Template="{StaticResource ComboBoxToggleButton}" />

                            <!--  Выпадающий Popup  -->
                            <Popup
                                x:Name="PART_Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                Placement="Bottom"
                                PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                PopupAnimation="Slide"
                                StaysOpen="False">
                                <Grid
                                    x:Name="DropDown"
                                    MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    SnapsToDevicePixels="True">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="{DynamicResource BorderColor}"
                                        BorderBrush="{DynamicResource BorderColor}"
                                        BorderThickness="1"
                                        CornerRadius="2">
                                        <ScrollViewer
                                            Margin="2"
                                            HorizontalScrollBarVisibility="Auto"
                                            SnapsToDevicePixels="True"
                                            VerticalScrollBarVisibility="Auto">
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource DisabledForeground}" />
                            <Setter TargetName="MainBorder" Property="Opacity" Value="0.6" />
                        </Trigger>

                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBoxItem стиль  -->
    <Style BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}" TargetType="ComboBoxItem">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedRowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectedRowForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  DatePicker стиль  -->
    <Style BasedOn="{x:Null}" TargetType="DatePicker">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <!--  Calendar стиль  -->
    <Style BasedOn="{StaticResource MaterialDesignCalendarPortrait}" TargetType="Calendar">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
    </Style>

    <Style BasedOn="{StaticResource MaterialDesignCalendarItemPortrait}" TargetType="CalendarItem">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <!--  ScrollViewer стиль  -->
    <Style TargetType="ScrollViewer">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="4" />
    </Style>

    <!--  ScrollBar стиль  -->
    <Style BasedOn="{x:Null}" TargetType="ScrollBar">
        <Setter Property="Foreground" Value="{DynamicResource AccentColor}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid x:Name="VerticalTemplate" Visibility="Visible">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <RepeatButton
                                Grid.Row="0"
                                Height="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Command="ScrollBar.LineUpCommand"
                                Focusable="False">
                                <Path
                                    Margin="3"
                                    Data="M 0,10 L 5,0 L 10,10 Z"
                                    Fill="{DynamicResource PrimaryForeground}"
                                    Stretch="Uniform" />
                            </RepeatButton>
                            <Track
                                x:Name="PART_Track"
                                Grid.Row="1"
                                IsDirectionReversed="True"
                                Orientation="Vertical">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Command="ScrollBar.PageUpCommand"
                                        Focusable="False" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Background="{DynamicResource AccentColor}" Focusable="False">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Border
                                                    Margin="2"
                                                    Background="{TemplateBinding Background}"
                                                    CornerRadius="3" />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Command="ScrollBar.PageDownCommand"
                                        Focusable="False" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton
                                Grid.Row="2"
                                Height="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Command="ScrollBar.LineDownCommand"
                                Focusable="False">
                                <Path
                                    Margin="3"
                                    Data="M 0,0 L 5,10 L 10,0 Z"
                                    Fill="{DynamicResource PrimaryForeground}"
                                    Stretch="Uniform" />
                            </RepeatButton>
                        </Grid>
                        <Grid x:Name="HorizontalTemplate" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <RepeatButton
                                Grid.Column="0"
                                Width="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Command="ScrollBar.LineLeftCommand"
                                Focusable="False">
                                <Path
                                    Margin="3"
                                    Data="M 10,0 L 0,5 L 10,10 Z"
                                    Fill="{DynamicResource PrimaryForeground}"
                                    Stretch="Uniform" />
                            </RepeatButton>
                            <Track
                                x:Name="PART_HorizontalTrack"
                                Grid.Column="1"
                                IsDirectionReversed="False"
                                Orientation="Horizontal">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Command="ScrollBar.PageLeftCommand"
                                        Focusable="False" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Background="{DynamicResource AccentColor}" Focusable="False">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Border
                                                    Margin="2"
                                                    Background="{TemplateBinding Background}"
                                                    CornerRadius="3" />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Command="ScrollBar.PageRightCommand"
                                        Focusable="False" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton
                                Grid.Column="2"
                                Width="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Command="ScrollBar.LineRightCommand"
                                Focusable="False">
                                <Path
                                    Margin="3"
                                    Data="M 0,0 L 10,5 L 0,10 Z"
                                    Fill="{DynamicResource PrimaryForeground}"
                                    Stretch="Uniform" />
                            </RepeatButton>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="VerticalTemplate" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="HorizontalTemplate" Property="Visibility" Value="Visible" />
                            <Setter Property="Height" Value="14" />
                            <Setter Property="Width" Value="Auto" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{x:Null}" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
    </Style>

    <Style BasedOn="{x:Null}" TargetType="GridSplitter">
        <Setter Property="Background" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
    </Style>
</ResourceDictionary>