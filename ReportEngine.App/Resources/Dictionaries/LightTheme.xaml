<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  Цветовая палитра для светлой темы (адаптировано для лучшей читаемости и контраста)  -->
    <Color x:Key="PrimaryColor">#FFF8F9FB</Color>
    <Color x:Key="DarkGrayColor">#FFE5E7EA</Color>
    <Color x:Key="BlackColor">#FF23272E</Color>
    <Color x:Key="AccentColor">#FF007ACC</Color>
    <Color x:Key="HoverLightColor">#FFD0D3D8</Color>
    <Color x:Key="PressedColor">#FFB0B3B8</Color>
    <Color x:Key="DisabledColor">#FFB0B3B8</Color>
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}" />
    <SolidColorBrush x:Key="DarkGrayBrush" Color="{StaticResource DarkGrayColor}" />
    <SolidColorBrush x:Key="BlackBrush" Color="{StaticResource BlackColor}" />
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}" />
    <SolidColorBrush x:Key="HoverLightBrush" Color="{StaticResource HoverLightColor}" />
    <SolidColorBrush x:Key="PressedBrush" Color="{StaticResource PressedColor}" />
    <SolidColorBrush x:Key="DisabledBrush" Color="{StaticResource DisabledColor}" />

    <!--  Window Style  -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
    </Style>

    <!--  Button Style  -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource HoverLightBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Foreground" Value="#FF888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Menu Style  -->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <!--  MenuItem Style  -->
    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="12,6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <!--  Icon  -->
                            <ContentPresenter
                                x:Name="Icon"
                                Margin="0,0,8,0"
                                VerticalAlignment="Center"
                                ContentSource="Icon" />
                            <!--  Header  -->
                            <ContentPresenter
                                x:Name="HeaderHost"
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                            <!--  Submenu Arrow  -->
                            <Path
                                x:Name="Arrow"
                                Grid.Column="2"
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 8 6 L 0 12 Z"
                                Fill="{StaticResource AccentBrush}"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Submenu arrow visibility  -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--  Hover  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverLightBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
                        </Trigger>
                        <!--  Pressed  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <!--  Disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FF888888" />
                        </Trigger>
                        <!--  Submenu open  -->
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverLightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DataGrid Style  -->
    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowBackground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="AlternatingRowBackground" Value="#FFF0F1F3" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="SelectionUnit" Value="FullRow" />
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="BorderBrush" Value="{StaticResource BlackBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Padding" Value="8,6" />
        <Setter Property="Height" Value="32" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverLightBrush}" />
                <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="BorderBrush" Value="{StaticResource DarkGrayBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Padding" Value="8,6" />
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#10007ACC" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#60007ACC" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
