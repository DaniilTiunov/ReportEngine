<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz">

    <!--  Цветовые ресурсы для светлой темы  -->
    <SolidColorBrush x:Key="PrimaryColor" Color="#FFFFFF" />
    <SolidColorBrush x:Key="SecondaryColor" Color="#F5F5F5" />
    <SolidColorBrush x:Key="AccentColor" Color="#FF184461" />
    <SolidColorBrush x:Key="BorderColor" Color="#CCCCCC" />
    <SolidColorBrush x:Key="RowHoverColor" Color="#E0E0E0" />
    <SolidColorBrush x:Key="SelectedRowBackground" Color="DarkGray" />
    <SolidColorBrush x:Key="SelectedRowForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="PrimaryForeground" Color="Black" />
    <SolidColorBrush x:Key="SecondaryForeground" Color="#333333" />
    <SolidColorBrush x:Key="WindowBorderColor" Color="Black" />
    <SolidColorBrush x:Key="ButtonBackground" Color="#3A3A3A" />
    <SolidColorBrush x:Key="ButtonHoverBackground" Color="#505050" />
    <SolidColorBrush x:Key="ButtonPressedBackground" Color="#666666" />
    <SolidColorBrush x:Key="ButtonDisabledBackground" Color="#2A2A2A" />
    <SolidColorBrush x:Key="ButtonDisabledForeground" Color="#777777" />
    <SolidColorBrush x:Key="DisabledForeground" Color="Gray" />

    <!--  Стили для Window  -->
    <Style TargetType="Window">
        <Setter Property="FontFamily" Value="Bahnschrift" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
    </Style>

    <!--  Стиль рамки окна  -->
    <Style x:Key="WindowBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <!--  Стили для UserControl  -->
    <Style TargetType="UserControl">
        <Setter Property="FontFamily" Value="Bahnschrift" />
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
    </Style>

    <!--  Стили для DockPanel  -->
    <Style TargetType="DockPanel">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
    </Style>

    <!--  Стили для TextBox  -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
    </Style>

    <!--  Стили для DataGrid  -->
    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowBackground" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="HeadersVisibility" Value="Column" />
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Padding" Value="8,4" />
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedRowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectedRowForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Стили для ListView  -->
    <Style TargetType="ListView">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedRowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectedRowForeground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedRowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectedRowForeground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="GridViewColumnHeader">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Стили для Menu и MenuItem  -->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontFamily" Value="Bahnschrift" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                                <!--  колонка под стрелку  -->
                            </Grid.ColumnDefinitions>

                            <!--  Заголовок  -->
                            <ContentPresenter
                                x:Name="HeaderHost"
                                Margin="6,3"
                                VerticalAlignment="Center"
                                ContentSource="Header" />

                            <!--  Стрелочка  -->
                            <Path
                                x:Name="Arrow"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 4 4 L 0 8 Z"
                                Fill="{DynamicResource PrimaryForeground}"
                                Visibility="Collapsed">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="0" CenterX="2" CenterY="4" />
                                </Path.RenderTransform>
                            </Path>

                            <!--  Подменю  -->
                            <Popup
                                x:Name="SubMenuPopup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{TemplateBinding IsSubmenuOpen}"
                                Placement="Right"
                                PopupAnimation="Fade">
                                <Border
                                    x:Name="SubMenuBorder"
                                    Background="{DynamicResource SecondaryColor}"
                                    BorderBrush="{DynamicResource AccentColor}"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <!--  Триггеры  -->
                    <ControlTemplate.Triggers>
                        <!--  Подсветка  -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource RowHoverColor}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentColor}" />
                        </Trigger>
                        <!--  Неактивный пункт  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForeground}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource DisabledForeground}" />
                        </Trigger>
                        <!--  Если есть подменю → показываем стрелку  -->
                        <Trigger Property="HasItems" Value="True">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" CenterX="2" CenterY="4" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!--  Если подменю открыто → подсветка стрелки  -->
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource AccentColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
    </Style>
    <!--  Стили для StatusBar  -->
    <Style TargetType="StatusBar">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="FontSize" Value="13" />
    </Style>
    <!--  Стили для кнопок  -->
    <!--  Button  -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource SelectedRowForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Стили для TreeView  -->
    <Style TargetType="TreeView">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer
                            CanContentScroll="True"
                            HorizontalScrollBarVisibility="Disabled"
                            VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Стили для TreeViewItem  -->
    <Style TargetType="TreeViewItem">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            VerticalAlignment="Center"
                            FontWeight="Normal"
                            Text="{Binding}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Выделение элемента  -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedRowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectedRowForeground}" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <!--  Наведение мыши  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverColor}" />
            </Trigger>
            <!--  Раскрытие узла  -->
            <Trigger Property="IsExpanded" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  Стили для TabContol  -->
    <Style TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
    </Style>
    <!--  Стили для TabItem  -->
    <Style TargetType="TabItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border
                        Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="2,2,0,0">
                        <ContentPresenter
                            x:Name="ContentSite"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GeneratedTabItem" TargetType="TabItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border
                        Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="2,2,0,0">
                        <ContentPresenter
                            x:Name="ContentSite"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="dragablz:DragablzItemsControl">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
    </Style>

    <Style TargetType="dragablz:TabablzControl">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="AdjacentHeaderItemOffset" Value="1" />
        <Setter Property="ShowDefaultCloseButton" Value="True" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Padding" Value="0,0,0,0" />
    </Style>

    <Style TargetType="dragablz:DragablzItem">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>


    <!--  Стили для ContextMenu  -->
    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Стили для GroupBox  -->
    <Style TargetType="GroupBox">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryColor}" />
    </Style>
    <!--  ComboBox стиль  -->
    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
    </Style>

    <!--  ComboBoxItem стиль  -->
    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Padding" Value="4" />
    </Style>

    <!--  DatePicker стиль  -->
    <Style TargetType="DatePicker">
        <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
    </Style>
</ResourceDictionary>